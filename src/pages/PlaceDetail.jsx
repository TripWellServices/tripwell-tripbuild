import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';

export default function PlaceDetail() {
  const { placeSlug } = useParams();
  const navigate = useNavigate();
  const [place, setPlace] = useState(null);
  const [content, setContent] = useState(null);
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState('attractions');

  useEffect(() => {
    const fetchPlaceDetail = async () => {
      try {
        console.log('üîç Fetching place detail:', placeSlug);
        const response = await fetch(`http://localhost:3000/tripwell/place-detail/${placeSlug}`);
        
        if (response.ok) {
          const data = await response.json();
          console.log('‚úÖ Place detail fetched:', data);
          setPlace(data.place);
          setContent(data.content);
        } else {
          console.error('‚ùå Failed to fetch place detail:', response.status);
          setPlace(null);
          setContent(null);
        }
      } catch (error) {
        console.error('‚ùå Error fetching place detail:', error);
        setPlace(null);
        setContent(null);
      } finally {
        setLoading(false);
      }
    };

    if (placeSlug) {
      fetchPlaceDetail();
    }
  }, [placeSlug]);

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-sky-400 via-sky-300 to-blue-200 flex items-center justify-center">
        <div className="text-white text-xl">Loading place details...</div>
      </div>
    );
  }

  if (!place || !content) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-sky-400 via-sky-300 to-blue-200 flex items-center justify-center">
        <div className="text-center text-white">
          <h1 className="text-2xl font-bold mb-4">Place Not Found</h1>
          <p className="mb-4">The place detail you're looking for doesn't exist.</p>
          <button
            onClick={() => navigate('/place-library')}
            className="bg-white/20 text-white px-6 py-3 rounded-lg font-semibold hover:bg-white/30 transition"
          >
            ‚Üê Back to Library
          </button>
        </div>
      </div>
    );
  }

  const tabs = [
    { id: 'attractions', label: 'Attractions', count: content.attractions?.length || 0 },
    { id: 'restaurants', label: 'Restaurants', count: content.restaurants?.length || 0 },
    { id: 'mustSee', label: 'Must See', count: content.mustSee?.length || 0 },
    { id: 'mustDo', label: 'Must Do', count: content.mustDo?.length || 0 }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-sky-400 via-sky-300 to-blue-200 p-6">
      <div className="max-w-6xl mx-auto space-y-8">
        
        {/* Header */}
        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-8 shadow-xl border border-white/20">
          <div className="flex justify-between items-start mb-6">
            <div>
              <h1 className="text-3xl font-bold text-gray-800 mb-2">
                {place.slug}
              </h1>
              <p className="text-gray-600">
                Generated by Angela AI for {place.inputVariables.city} in {place.inputVariables.season}
              </p>
            </div>
            <button
              onClick={() => navigate('/place-library')}
              className="text-gray-600 hover:text-gray-800 transition"
            >
              ‚Üê Back to Library
            </button>
          </div>

          {/* Place Variables */}
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
            <div>
              <strong>Budget:</strong> {place.inputVariables.budget}
            </div>
            <div>
              <strong>Who With:</strong> {place.inputVariables.whoWith}
            </div>
            <div>
              <strong>Priorities:</strong> {place.inputVariables.priorities?.join(', ')}
            </div>
            <div>
              <strong>Vibes:</strong> {place.inputVariables.vibes?.join(', ')}
            </div>
          </div>
        </div>

        {/* Tabs */}
        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-xl border border-white/20">
          <div className="flex space-x-1 mb-6">
            {tabs.map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`px-4 py-2 rounded-lg font-medium transition ${
                  activeTab === tab.id
                    ? 'bg-blue-600 text-white'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                {tab.label} ({tab.count})
              </button>
            ))}
          </div>

          {/* Content */}
          <div className="space-y-4">
            {content[activeTab]?.map((item, index) => (
              <div key={index} className="bg-gray-50 rounded-lg p-4">
                <div className="flex justify-between items-start">
                  <div className="flex-1">
                    <h3 className="font-semibold text-gray-800 mb-1">
                      {item.name}
                    </h3>
                    <p className="text-gray-600 mb-2">
                      {item.description}
                    </p>
                    <div className="flex space-x-4 text-sm text-gray-500 mb-2">
                      <span>üìç {item.location}</span>
                      <span>üí∞ {item.cost || item.priceRange}</span>
                    </div>
                    {item.whyChose && (
                      <div className="bg-blue-50 border-l-4 border-blue-400 p-3 rounded-r-lg">
                        <p className="text-sm text-blue-800">
                          <strong>Why Angela chose this:</strong> {item.whyChose}
                        </p>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Actions */}
        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-xl border border-white/20">
          <div className="flex space-x-4">
            <button className="bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-700 transition">
              Generate New Profile
            </button>
            <button className="bg-green-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-green-700 transition">
              Export Content
            </button>
            <button className="bg-gray-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-gray-700 transition">
              Compare Profiles
            </button>
          </div>
        </div>

      </div>
    </div>
  );
}
