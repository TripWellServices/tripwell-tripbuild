import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';

export default function ProfileDetail() {
  const { profileSlug } = useParams();
  const navigate = useNavigate();
  const [profile, setProfile] = useState(null);
  const [content, setContent] = useState(null);
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState('attractions');

  useEffect(() => {
    // Mock data for now - replace with API call
    setTimeout(() => {
      setProfile({
        slug: profileSlug,
        inputVariables: {
          city: 'Paris',
          season: 'Spring',
          purpose: 'Explore culture on a budget',
          whoWith: 'solo',
          priorities: ['Culture & History', 'Adventure & Outdoor'],
          vibes: ['Authentic & Local'],
          mobility: ['Love walking everywhere'],
          travelPace: ['Fast Paced'],
          budget: '$50-100/day'
        }
      });

      setContent({
        attractions: [
          { name: 'Eiffel Tower', description: 'Iconic iron tower with city views', location: 'Champ de Mars', cost: 'Free' },
          { name: 'Louvre Museum', description: 'World\'s largest art museum', location: 'Louvre Palace', cost: '‚Ç¨17' },
          { name: 'Notre Dame', description: 'Gothic cathedral', location: '√éle de la Cit√©', cost: 'Free' }
        ],
        restaurants: [
          { name: 'Le Comptoir du Relais', description: 'Classic French bistro', location: 'Saint-Germain', priceRange: '$$' },
          { name: 'L\'As du Fallafel', description: 'Famous falafel spot', location: 'Marais', priceRange: '$' }
        ],
        mustSee: [
          { name: 'Seine River Cruise', description: 'Boat tour of Paris', location: 'Seine River', cost: '‚Ç¨15' }
        ],
        mustDo: [
          { name: 'Walk along Champs-√âlys√©es', description: 'Famous shopping street', location: 'Champs-√âlys√©es', cost: 'Free' }
        ]
      });

      setLoading(false);
    }, 1000);
  }, [profileSlug]);

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-sky-400 via-sky-300 to-blue-200 flex items-center justify-center">
        <div className="text-white text-xl">Loading profile details...</div>
      </div>
    );
  }

  const tabs = [
    { id: 'attractions', label: 'Attractions', count: content.attractions.length },
    { id: 'restaurants', label: 'Restaurants', count: content.restaurants.length },
    { id: 'mustSee', label: 'Must See', count: content.mustSee.length },
    { id: 'mustDo', label: 'Must Do', count: content.mustDo.length }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-sky-400 via-sky-300 to-blue-200 p-6">
      <div className="max-w-6xl mx-auto space-y-8">
        
        {/* Header */}
        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-8 shadow-xl border border-white/20">
          <div className="flex justify-between items-start mb-6">
            <div>
              <h1 className="text-3xl font-bold text-gray-800 mb-2">
                {profile.slug}
              </h1>
              <p className="text-gray-600">
                Generated by Angela AI for {profile.inputVariables.city} in {profile.inputVariables.season}
              </p>
            </div>
            <button
              onClick={() => navigate('/place-library')}
              className="text-gray-600 hover:text-gray-800 transition"
            >
              ‚Üê Back to Library
            </button>
          </div>

          {/* Profile Variables */}
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
            <div>
              <strong>Budget:</strong> {profile.inputVariables.budget}
            </div>
            <div>
              <strong>Who With:</strong> {profile.inputVariables.whoWith}
            </div>
            <div>
              <strong>Priorities:</strong> {profile.inputVariables.priorities.join(', ')}
            </div>
            <div>
              <strong>Vibes:</strong> {profile.inputVariables.vibes.join(', ')}
            </div>
          </div>
        </div>

        {/* Tabs */}
        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-xl border border-white/20">
          <div className="flex space-x-1 mb-6">
            {tabs.map(tab => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`px-4 py-2 rounded-lg font-medium transition ${
                  activeTab === tab.id
                    ? 'bg-blue-600 text-white'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                {tab.label} ({tab.count})
              </button>
            ))}
          </div>

          {/* Content */}
          <div className="space-y-4">
            {content[activeTab].map((item, index) => (
              <div key={index} className="bg-gray-50 rounded-lg p-4">
                <div className="flex justify-between items-start">
                  <div className="flex-1">
                    <h3 className="font-semibold text-gray-800 mb-1">
                      {item.name}
                    </h3>
                    <p className="text-gray-600 mb-2">
                      {item.description}
                    </p>
                    <div className="flex space-x-4 text-sm text-gray-500">
                      <span>üìç {item.location}</span>
                      <span>üí∞ {item.cost || item.priceRange}</span>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Actions */}
        <div className="bg-white/80 backdrop-blur-sm rounded-2xl p-6 shadow-xl border border-white/20">
          <div className="flex space-x-4">
            <button className="bg-blue-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-700 transition">
              Generate New Profile
            </button>
            <button className="bg-green-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-green-700 transition">
              Export Content
            </button>
            <button className="bg-gray-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-gray-700 transition">
              Compare Profiles
            </button>
          </div>
        </div>

      </div>
    </div>
  );
}
